. to compute statistical significance on devel section:

gam@cogito:~/mit/conll2008/tools$ ./compare-bikel.pl ../../eacl09/eacl09-results/synt-n-srl-g/dev.blind.res.synt_deproj.conll08.evalb_sx ../../eacl09/eacl09-results/synt-n-srl-proj/devel.blind.mode.deproj.conll08.evalb_sx
p-value for recall diff: 0.20957904209579
p-value for precision diff: 0.20957904209579

gam@cogito:~/mit/conll2008/tools$ ./compare-bikel.pl ../../eacl09/eacl09-results/synt-n-srl-g/dev.blind.res.synt_deproj.conll08.evalb_ss ../../eacl09/eacl09-results/synt-n-srl-proj/devel.blind.mode.deproj.conll08.evalb_ss
p-value for recall diff: 9.99900009999e-05
p-value for precision diff: 9.99900009999e-05

gam@cogito:~/mit/conll2008/tools$ ./compare-bikel.pl ../../eacl09/eacl09-results/synt-n-srl-g/dev.blind.res.synt_deproj.conll08.evalb_sx ../../eacl09/eacl09-results/synt-n-srl-n/devel.blind.mode.deproj.conll08.evalb_sx
p-value for recall diff: 0.0076992300769923
p-value for precision diff: 0.0076992300769923

gam@cogito:~/mit/conll2008/tools$ ./compare-bikel.pl ../../eacl09/eacl09-results/synt-n-srl-g/dev.blind.res.synt_deproj.conll08.evalb_ss ../../eacl09/eacl09-results/synt-n-srl-n/devel.blind.mode.deproj.conll08.evalb_ss
p-value for recall diff: 9.99900009999e-05
p-value for precision diff: 0.436756324367563

gam@cogito:~/mit/conll2008/tools$ ./compare-bikel.pl ../../eacl09/eacl09-results/synt-n-srl-g/dev.blind.res.synt_deproj.conll08.evalb_sscr ../../eacl09/eacl09-results/synt-n-srl-n/devel.blind.mode.deproj.conll08.evalb_sscr
p-value for recall diff: 0.147985201479852
p-value for precision diff: 0.0050994900509949

gam@cogito:~/mit/conll2008/tools$ ./compare-bikel.pl ../../eacl09/eacl09-results/synt-n-srl-g/dev.blind.res.synt_deproj.conll08.evalb_sscr ../../eacl09/eacl09-results/synt-n-srl-e-late/dev.blind.res.deproj.conll08.evalb_sscr
p-value for recall diff: 0.357064293570643
p-value for precision diff: 0.298870112988701

gam@cogito:~/mit/conll2008/tools$ ./compare-bikel.pl ../../eacl09/eacl09-results/synt-n-srl-g/dev.blind.res.synt_deproj.conll08.evalb_ss ../../eacl09/eacl09-results/synt-n-srl-e-late/dev.blind.res.deproj.conll08.evalb_ss
p-value for recall diff: 0.0032996700329967
p-value for precision diff: 0.137786221377862

gam@cogito:~/mit/conll2008/tools$ ./compare-bikel.pl ../../eacl09/eacl09-results/synt-n-srl-g/dev.blind.res.synt_deproj.conll08.evalb_sx ../../eacl09/eacl09-results/synt-n-srl-e-late/dev.blind.res.deproj.conll08.evalb_sx
p-value for recall diff: 0.0013998600139986
p-value for precision diff: 0.0013998600139986

gam@cogito:~/mit/conll2008/tools$ ./evalb_sx.pl ../conll08st/devel/devel.closed ../../eacl09/eacl09-results/synt-n-srl-g/dev.blind.res.synt_deproj.conll08 > ../../eacl09/eacl09-results/synt-n-srl-g/dev.blind.res.synt_deproj.conll08.evalb_sx
28740 33368 33368
1334 CoNLL records done
gam@cogito:~/mit/conll2008/tools$ ./evalb_ss.pl ../conll08st/devel/devel.closed ../../eacl09/eacl09-results/synt-n-srl-g/dev.blind.res.synt_deproj.conll08 > ../../eacl09/eacl09-results/synt-n-srl-g/dev.blind.res.synt_deproj.conll08.evalb_ss
14464 18164 20255
1334 CoNLL records done
gam@cogito:~/mit/conll2008/tools$ ./evalb_cr.pl ../conll08st/devel/devel.closed ../../eacl09/eacl09-results/synt-n-srl-g/dev.blind.res.synt_deproj.conll08 > ../../eacl09/eacl09-results/synt-n-srl-g/dev.blind.res.synt_deproj.conll08.evalb_sscr
389 632 1520
1334 CoNLL records done
gam@cogito:~/mit/conll2008/tools$ ./evalb_cr.pl ../conll08st/devel/devel.closed ../../eacl09/eacl09-results/synt-n-srl-e-late/dev.blind.res.deproj.conll08 > ../../eacl09/eacl09-results/synt-n-srl-e-late/dev.blind.res.deproj.conll08.evalb_sscr
358 600 1520
1334 CoNLL records done
gam@cogito:~/mit/conll2008/tools$ ./evalb_ss.pl ../conll08st/devel/devel.closed ../../eacl09/eacl09-results/synt-n-srl-e-late/dev.blind.res.deproj.conll08 > ../../eacl09/eacl09-results/synt-n-srl-e-late/dev.blind.res.deproj.conll08.evalb_ss
14800 18717 20255
1334 CoNLL records done
gam@cogito:~/mit/conll2008/tools$ ./evalb_sx.pl ../conll08st/devel/devel.closed ../../eacl09/eacl09-results/synt-n-srl-e-late/dev.blind.res.deproj.conll08 > ../../eacl09/eacl09-results/synt-n-srl-e-late/dev.blind.res.deproj.conll08.evalb_sx
28975 33368 33368
1334 CoNLL records done
gam@cogito:~/mit/conll2008/tools$ ./evalb_ss.pl ../conll08st/devel/devel.closed ../../eacl09/eacl09-results/synt-n-srl-e-late/dev.blind.res.deproj.conll08 > ../../eacl09/eacl09-results/synt-n-srl-e-late/dev.blind.res.deproj.conll08.evalb_ss
14800 18717 20255
1334 CoNLL records done
gam@cogito:~/mit/conll2008/tools$ ./evalb_sx.pl ../conll08st/devel/devel.closed ../../eacl09/eacl09-results/synt-n-srl-e-late/dev.blind.res.deproj.conll08 > ../../eacl09/eacl09-results/synt-n-srl-e-late/dev.blind.res.deproj.conll08.evalb_sx
28975 33368 33368
1334 CoNLL records done
gam@cogito:~/mit/conll2008/tools$ ./evalb_sx.pl ../conll08st/devel/devel.closed ../../eacl09/eacl09-results/synt-n-srl-n/devel.blind.mode.deproj.conll08 > ../../eacl09/eacl09-results/synt-n-srl-n/devel.blind.mode.deproj.conll08.evalb_sx
28924 33368 33368
1334 CoNLL records done
gam@cogito:~/mit/conll2008/tools$ ./evalb_ss.pl ../conll08st/devel/devel.closed ../../eacl09/eacl09-results/synt-n-srl-n/devel.blind.mode.deproj.conll08 > ../../eacl09/eacl09-results/synt-n-srl-n/devel.blind.mode.deproj.conll08.evalb_ss
13752 17261 20255
1334 CoNLL records done
gam@cogito:~/mit/conll2008/tools$ ./evalb_cr.pl ../conll08st/devel/devel.closed ../../eacl09/eacl09-results/synt-n-srl-n/devel.blind.mode.deproj.conll08 > ../../eacl09/eacl09-results/synt-n-srl-n/devel.blind.mode.deproj.conll08.evalb_sscr
33 42 1520
1334 CoNLL records done
gam@cogito:~/mit/conll2008/tools$ ./evalb_cr.pl ../conll08st/devel/devel.closed ../../eacl09/eacl09-results/synt-n-srl-proj/devel.blind.mode.deproj.conll08 > ../../eacl09/eacl09-results/synt-n-srl-proj/devel.blind.mode.deproj.conll08.evalb_sscr
0 0 1520
1334 CoNLL records done
gam@cogito:~/mit/conll2008/tools$ ./evalb_ss.pl ../conll08st/devel/devel.closed ../../eacl09/eacl09-results/synt-n-srl-proj/devel.blind.mode.deproj.conll08 > ../../eacl09/eacl09-results/synt-n-srl-proj/devel.blind.mode.deproj.conll08.evalb_ss
13960 18079 20255
1334 CoNLL records done
gam@cogito:~/mit/conll2008/tools$ ./evalb_sx.pl ../conll08st/devel/devel.closed ../../eacl09/eacl09-results/synt-n-srl-proj/devel.blind.mode.deproj.conll08 > ../../eacl09/eacl09-results/synt-n-srl-proj/devel.blind.mode.deproj.conll08.evalb_sx
28674 33368 33368
1334 CoNLL records done

. to compute statistical significance on test section:

gam@cogito:~/mit/conll2008/tools$ bash compare-bikel.sh

gam@cogito:~/mit/conll2008/tools$ ./evalb_sx.pl ../../eacl09/posteval/test.wsj.brown.closed.GOLD ../../eacl09/posteval/conll08_submissions/posteval_johansson.wsj.brown.closed.mrg > ../../eacl09/posteval/conll08_submissions/posteval_johansson.wsj.brown.closed.mrg.evalb_sx
57951 64883 64883
2824 CoNLL records done
gam@cogito:~/mit/conll2008/tools$ ./evalb_sx.pl ../../eacl09/posteval/test.wsj.brown.closed.GOLD ../../eacl09/posteval/conll08_submissions/posteval_ciaramita.wsj.brown.closed.mrg > ../../eacl09/posteval/conll08_submissions/posteval_ciaramita.wsj.brown.closed.mrg.evalb_sx
56686 64883 64883
2824 CoNLL records done
gam@cogito:~/mit/conll2008/tools$ ./evalb_sx.pl ../../eacl09/posteval/test.wsj.brown.closed.GOLD ../../eacl09/posteval/conll08_submissions/posteval_che.wsj.brown.closed.mrg > ../../eacl09/posteval/conll08_submissions/posteval_che.wsj.brown.closed.mrg.evalb_sx
56289 64883 64883
2824 CoNLL records done
gam@cogito:~/mit/conll2008/tools$ ./evalb_sx.pl ../../eacl09/posteval/test.wsj.brown.closed.GOLD ../../eacl09/posteval/conll08_submissions/posteval_zhao.wsj.brown.closed.mrg > ../../eacl09/posteval/conll08_submissions/posteval_zhao.wsj.brown.closed.mrg.evalb_sx
56888 64883 64883
2824 CoNLL records done
gam@cogito:~/mit/conll2008/tools$ ./evalb_sx.pl ../../eacl09/posteval/test.wsj.brown.closed.GOLD ../../eacl09/posteval/conll08_submissions/posteval_henderson.wsj.brown.closed.mrg > ../../eacl09/posteval/conll08_submissions/posteval_henderson.wsj.brown.closed.mrg.evalb_sx
56863 64883 64883
2824 CoNLL records done
gam@cogito:~/mit/conll2008/tools$ ./evalb_sx.pl ../../eacl09/posteval/test.wsj.brown.closed.GOLD ../../eacl09/posteval/conll08_submissions/posteval_lluis.wsj.brown.closed.mrg > ../../eacl09/posteval/conll08_submissions/posteval_lluis.wsj.brown.closed.mrg.evalb_sx
55694 64883 64883
2824 CoNLL records done

gam@cogito:~/mit/conll2008/tools$ ./evalb_ss.pl ../../eacl09/posteval/test.wsj.brown.closed.GOLD ../../eacl09/posteval/conll08_submissions/posteval_lluis.wsj.brown.closed.mrg > ../../eacl09/posteval/conll08_submissions/posteval_lluis.wsj.brown.closed.mrg.evalb_ss
25941 35850 37902
2824 CoNLL records done
gam@cogito:~/mit/conll2008/tools$ ./evalb_ss.pl ../../eacl09/posteval/test.wsj.brown.closed.GOLD ../../eacl09/posteval/conll08_submissions/posteval_henderson.wsj.brown.closed.mrg > ../../eacl09/posteval/conll08_submissions/posteval_henderson.wsj.brown.closed.mrg.evalb_ss
25749 32555 37902
2824 CoNLL records done
gam@cogito:~/mit/conll2008/tools$ ./evalb_ss.pl ../../eacl09/posteval/test.wsj.brown.closed.GOLD ../../eacl09/posteval/conll08_submissions/posteval_zhao.wsj.brown.closed.mrg > ../../eacl09/posteval/conll08_submissions/posteval_zhao.wsj.brown.closed.mrg.evalb_ss
28050 35192 37902
2824 CoNLL records done
gam@cogito:~/mit/conll2008/tools$ ./evalb_ss.pl ../../eacl09/posteval/test.wsj.brown.closed.GOLD ../../eacl09/posteval/conll08_submissions/posteval_che.wsj.brown.closed.mrg > ../../eacl09/posteval/conll08_submissions/posteval_che.wsj.brown.closed.mrg.evalb_ss
28835 35543 37902
2824 CoNLL records done
gam@cogito:~/mit/conll2008/tools$ ./evalb_ss.pl ../../eacl09/posteval/test.wsj.brown.closed.GOLD ../../eacl09/posteval/conll08_submissions/posteval_johansson.wsj.brown.closed.mrg > ../../eacl09/posteval/conll08_submissions/posteval_johansson.wsj.brown.closed.mrg.evalb_ss
30684 37255 37902
2824 CoNLL records done
gam@cogito:~/mit/conll2008/tools$ ./evalb_ss.pl ../../eacl09/posteval/test.wsj.brown.closed.GOLD ../../eacl09/posteval/conll08_submissions/posteval_ciaramita.wsj.brown.closed.mrg > ../../eacl09/posteval/conll08_submissions/posteval_ciaramita.wsj.brown.closed.mrg.evalb_ss
29064 36622 37902
2824 CoNLL records done

gam@cogito:~/mit/conll2008/tools$ ./evalb_cr.pl ../../eacl09/posteval/test.wsj.brown.closed.GOLD ../../eacl09/posteval/conll08_submissions/posteval_johansson.wsj.brown.closed.mrg > ../../eacl09/posteval/conll08_submissions/posteval_johansson.wsj.brown.closed.mrg.evalb_sscr
1200 1791 2697
2824 CoNLL records done
gam@cogito:~/mit/conll2008/tools$ ./evalb_cr.pl ../../eacl09/posteval/test.wsj.brown.closed.GOLD ../../eacl09/posteval/conll08_submissions/posteval_ciaramita.wsj.brown.closed.mrg > ../../eacl09/posteval/conll08_submissions/posteval_ciaramita.wsj.brown.closed.mrg.evalb_sscr
922 1538 2697
2824 CoNLL records done
gam@cogito:~/mit/conll2008/tools$ ./evalb_cr.pl ../../eacl09/posteval/test.wsj.brown.closed.GOLD ../../eacl09/posteval/conll08_submissions/posteval_che.wsj.brown.closed.mrg > ../../eacl09/posteval/conll08_submissions/posteval_che.wsj.brown.closed.mrg.evalb_sscr
873 1534 2697
2824 CoNLL records done
gam@cogito:~/mit/conll2008/tools$ ./evalb_cr.pl ../../eacl09/posteval/test.wsj.brown.closed.GOLD ../../eacl09/posteval/conll08_submissions/posteval_zhao.wsj.brown.closed.mrg > ../../eacl09/posteval/conll08_submissions/posteval_zhao.wsj.brown.closed.mrg.evalb_sscr
973 1663 2697
2824 CoNLL records done
gam@cogito:~/mit/conll2008/tools$ ./evalb_cr.pl ../../eacl09/posteval/test.wsj.brown.closed.GOLD ../../eacl09/posteval/conll08_submissions/posteval_henderson.wsj.brown.closed.mrg > ../../eacl09/posteval/conll08_submissions/posteval_henderson.wsj.brown.closed.mrg.evalb_sscr
45 62 2697
2824 CoNLL records done
gam@cogito:~/mit/conll2008/tools$ ./evalb_cr.pl ../../eacl09/posteval/test.wsj.brown.closed.GOLD ../../eacl09/posteval/conll08_submissions/posteval_lluis.wsj.brown.closed.mrg > ../../eacl09/posteval/conll08_submissions/posteval_lluis.wsj.brown.closed.mrg.evalb_sscr
519 964 2697
2824 CoNLL records done

gam@cogito:~/mit/conll2008/tools$ ./evalb_cr.pl ../../eacl09/posteval/test.wsj.brown.closed.GOLD ../../eacl09/eacl09-results/synt-n-srl-g/test.wsj-brown.conll08 > ../../eacl09/eacl09-results/synt-n-srl-g/test.wsj-brown.conll08.evalb_sscr
794 1279 2697
2824 CoNLL records done
gam@cogito:~/mit/conll2008/tools$ ./evalb_sx.pl ../../eacl09/posteval/test.wsj.brown.closed.GOLD ../../eacl09/eacl09-results/synt-n-srl-g/test.wsj-brown.conll08 > ../../eacl09/eacl09-results/synt-n-srl-g/test.wsj-brown.conll08.evalb_sx
56803 64883 64883
2824 CoNLL records done
gam@cogito:~/mit/conll2008/tools$ ./evalb_ss.pl ../../eacl09/posteval/test.wsj.brown.closed.GOLD ../../eacl09/eacl09-results/synt-n-srl-g/test.wsj-brown.conll08 > ../../eacl09/eacl09-results/synt-n-srl-g/test.wsj-brown.conll08.evalb_ss
28019 35745 37902
2824 CoNLL records done

. to compute pgm eval08 score:

gam@cogito:~/mit/conll2008/tools$ ./eval08-pgm.pl -q -g ../../eacl09/posteval/test.wsj.brown.closed.GOLD -s ../../eacl09/posteval/conll08_submissions/posteval_henderson.wsj.brown.closed.mrg > ../../eacl09/posteval/conll08_submissions/posteval_henderson.wsj.brown.closed.mrg.eval.pgm
gam@cogito:~/mit/conll2008/tools$ ./eval08-pgm.pl -q -g ../../eacl09/posteval/test.wsj.brown.closed.GOLD -s ../../eacl09/posteval/conll08_submissions/posteval_lluis.wsj.brown.closed.mrg > ../../eacl09/posteval/conll08_submissions/posteval_lluis.wsj.brown.closed.mrg.eval.pgm
gam@cogito:~/mit/conll2008/tools$ ./eval08-pgm.pl -q -g ../../eacl09/posteval/test.wsj.brown.closed.GOLD -s ../../eacl09/posteval/conll08_submissions/posteval_johansson.wsj.brown.closed.mrg > ../../eacl09/posteval/conll08_submissions/posteval_johansson.wsj.brown.closed.mrg.eval.pgm
gam@cogito:~/mit/conll2008/tools$ ./eval08-pgm.pl -q -g ../../eacl09/posteval/test.wsj.brown.closed.GOLD -s ../../eacl09/posteval/conll08_submissions/posteval_ciaramita.wsj.brown.closed.mrg > ../../eacl09/posteval/conll08_submissions/posteval_ciaramita.wsj.brown.closed.mrg.eval.pgm
gam@cogito:~/mit/conll2008/tools$ ./eval08-pgm.pl -q -g ../../eacl09/posteval/test.wsj.brown.closed.GOLD -s ../../eacl09/posteval/conll08_submissions/posteval_zhao.wsj.brown.closed.mrg > ../../eacl09/posteval/conll08_submissions/posteval_zhao.wsj.brown.closed.mrg.eval.pgm
gam@cogito:~/mit/conll2008/tools$ ./eval08-pgm.pl -q -g ../../eacl09/posteval/test.wsj.brown.closed.GOLD -s ../../eacl09/posteval/conll08_submissions/posteval_che.wsj.brown.closed.mrg > ../../eacl09/posteval/conll08_submissions/posteval_che.wsj.brown.closed.mrg.eval.pgm

gam@cogito:~/mit/conll2008/tools$ ./eval08-pgm.pl -q -g ../../eacl09/posteval/test.wsj.brown.closed.GOLD -s ../../eacl09/eacl09-results/synt-n-srl-g/test.wsj-brown.conll08 > ../../eacl09/eacl09-results/synt-n-srl-g/test.wsj-brown.eval.pgm

. to compute NPSS and NPSX on the dev set of the late-exhaustive model:

gam@cogito:~/mit/eacl09/eacl09-results/synt-n-srl-e-late$ ../../../conll2008/tools/nonplanar_pr.pl ../../../conll2008/conll08st/devel/devel.closed dev.blind.res.deproj.conll08 > dev.blind.res.deproj.conll08.np.eval
gam@cogito:~/mit/eacl09/eacl09-results/synt-n-srl-e-late$ tail -n 25 dev.blind.res.deproj.conll08.np.eval
1334 CoNLL records read
SX P 28975 / 33368 * 100 = 86.83 %
SX R 28975 / 33368 * 100 = 86.83 %
SX F1 86.83 %

SS P 9599 / 12656 * 100 = 75.85 %
SS R 9599 / 13865 * 100 = 69.23 %
SS F1 72.39 %

NPSX P 17 / 66 * 100 = 25.76 %
NPSX R 17 / 118 * 100 = 14.41 %
NPSX F1 18.48 %

uNPSX P 26 / 66 * 100 = 39.39 %
uNPSX R 26 / 118 * 100 = 22.03 %
uNPSX F1 28.26 %

NPSS P 358 / 600 * 100 = 59.67 %
NPSS R 358 / 1520 * 100 = 23.55 %
NPSS F1 33.77 %

uNPSS P 406 / 600 * 100 = 67.67 %
uNPSS R 406 / 1520 * 100 = 26.71 %
uNPSS F1 38.30 %

. to compute randomized statistical significance for crossing-pairs scores:

gam@cogito:~/mit/conll2008/tools$ ./evalb_cr.pl ../conll08st/devel/devel.closed ../../eacl09/eacl09-results/synt-n-srl-g/dev.blind.res.synt_deproj.conll08 > ../../eacl09/eacl09-results/synt-n-srl-g/dev.blind.res.synt_deproj.conll08.evalb_sscr
389 632 1520
1334 CoNLL records done

. to compute randomized statistical significance for micro scores (statistical significance can not be meaninfully computed on macro scores):

gam@cogito:~/mit/conll2008/tools$ ./evalb_sxss.pl ../conll08st/devel/devel.closed ../../eacl09/eacl09-results/synt-n-srl-g/dev.blind.res.synt_deproj.conll08 > ../../eacl09/eacl09-results/synt-n-srl-g/dev.blind.res.synt_deproj.conll08.evalb_sxss
43204 51532 53623
1334 CoNLL records done

. to compute randomized statistical significance:

TO DO evalb_cr.pl, evalb_sxss.pl

gam@cogito:~/mit/conll2008/tools$ ./evalb_ss.pl ../conll08st/devel/devel.closed ../../eacl09/eacl09-results/synt-n-srl-g/dev.blind.res.synt_deproj.conll08 > ../../eacl09/eacl09-results/synt-n-srl-g/dev.blind.res.synt_deproj.conll08.evalb_ss
14464 18164 20255
1334 CoNLL records done

gam@cogito:~/mit/conll2008/tools$ ./evalb_sx.pl ../conll08st/devel/devel.closed ../../eacl09/eacl09-results/synt-n-srl-g/dev.blind.res.synt_deproj.conll08 > ../../eacl09/eacl09-results/synt-n-srl-g/dev.blind.res.synt_deproj.conll08.evalb_sx
28740 33368 33368
1334 CoNLL records done

gam@cogito:~/mit/conll2008/tools$ ./eval08-exactmatch.pl -q -x -g ../conll08st/devel/devel.closed -s ../../eacl09/eacl09-results/synt-n-srl-g/dev.blind.res.synt_deproj.conll08 > evalb.1
gam@cogito:~/mit/conll2008/tools$ ./eval08-exactmatch.pl -q -x -g ../conll08st/devel/devel.closed -s ../../eacl09/eacl09-results/synt-n-srl-e/devel.blind.mode.deproj.conll08 > evalb.2
gam@cogito:~/mit/conll2008/tools$ ./compare-bikel.pl evalb.1 evalb.2
33368
model1: recall=87.7089363256784, precision=86.1306539199233
model2: recall=87.8217922628143, precision=86.2982809877727
model2 recall - model1 recall = 0.112855937135976
model2 precision - model1 precision = 0.167627067849338
Doing random shuffle 10000 times.
Completed 1000 iterations
Completed 2000 iterations
Completed 3000 iterations
Completed 4000 iterations
Completed 5000 iterations
Completed 6000 iterations
Completed 7000 iterations
Completed 8000 iterations
Completed 9000 iterations
number of random recall diferences equal to or greater than
        original observed difference: 2761
number of random precision diferences equal to or greater than
        original observed difference: 2299
p-value for recall diff: 0.276172382761724
p-value for precision diff: 0.22997700229977


Thu Oct  9 18:17:52 CEST 2008

. to compute NPSX, NPSS, UNPSX and UNPSS on test.wsj-brown data set:

gam@cogito:~/mit/eacl09/posteval$ cut -f1-8 test.brown.closed.GOLD |paste - conll08_submissions/posteval_johansson.brown.closed |perl -wnl -e 's/\s+$//g; print;' |perl -F"\s+" -awnl -e 'if (@F){print join("\t", @F[0..7,9..$#F]);}else{print;}' > conll08_submissions/posteval_johansson.brown.closed.mrg
gam@cogito:~/mit/eacl09/posteval$ cut -f1-8 test.brown.closed.GOLD |paste - conll08_submissions/posteval_ciaramita.brown.closed |perl -wnl -e 's/\s+$//g; print;' |perl -F"\s+" -awnl -e 'if (@F){print join("\t", @F[0..7,9..$#F]);}else{print;}' > conll08_submissions/posteval_ciaramita.brown.closed.mrg
gam@cogito:~/mit/eacl09/posteval$ cut -f1-8 test.brown.closed.GOLD |paste - conll08_submissions/posteval_lluis.brown.closed |perl -wnl -e 's/\s+$//g; print;' |perl -F"\s+" -awnl -e 'if (@F){print join("\t", @F[0..7,9..$#F]);}else{print;}' > conll08_submissions/posteval_lluis.brown.closed.mrg
gam@cogito:~/mit/eacl09/posteval$ cut -f1-8 test.brown.closed.GOLD |paste - conll08_submissions/posteval_zhao.brown.closed |perl -wnl -e 's/\s+$//g; print;' |perl -F"\s+" -awnl -e 'if (@F){print join("\t", @F[0..7,9..$#F]);}else{print;}' > conll08_submissions/posteval_zhao.brown.closed.mrg
gam@cogito:~/mit/eacl09/posteval$ cut -f1-8 test.brown.closed.GOLD |paste - conll08_submissions/posteval_henderson.brown.closed |perl -wnl -e 's/\s+$//g; print;' |perl -F"\s+" -awnl -e 'if (@F){print join("\t", @F[0..7,9..$#F]);}else{print;}' > conll08_submissions/posteval_henderson.brown.closed.mrg
gam@cogito:~/mit/eacl09/posteval$ cut -f1-8 test.brown.closed.GOLD |paste - conll08_submissions/che.brown.closed |perl -wnl -e 's/\s+$//g; print;' |perl -F"\s+" -awnl -e 'if (@F){print join("\t", @F[0..7,9..$#F]);}else{print;}' > conll08_submissions/posteval_che.brown.closed.mrg

gam@cogito:~/mit/eacl09/posteval$ cat conll08_submissions/posteval_johansson.wsj.closed.mrg conll08_submissions/posteval_johansson.brown.closed.mrg > conll08_submissions/posteval_johansson.wsj.brown.closed.mrg 
gam@cogito:~/mit/eacl09/posteval$ cat conll08_submissions/posteval_ciaramita.wsj.closed.mrg conll08_submissions/posteval_ciaramita.brown.closed.mrg > conll08_submissions/posteval_ciaramita.wsj.brown.closed.mrg 
gam@cogito:~/mit/eacl09/posteval$ cat conll08_submissions/posteval_zhao.wsj.closed.mrg conll08_submissions/posteval_zhao.brown.closed.mrg > conll08_submissions/posteval_zhao.wsj.brown.closed.mrg 
gam@cogito:~/mit/eacl09/posteval$ cat conll08_submissions/posteval_lluis.wsj.closed.mrg conll08_submissions/posteval_lluis.brown.closed.mrg > conll08_submissions/posteval_lluis.wsj.brown.closed.mrg 
gam@cogito:~/mit/eacl09/posteval$ cat conll08_submissions/posteval_che.wsj.closed.mrg conll08_submissions/posteval_che.brown.closed.mrg > conll08_submissions/posteval_che.wsj.brown.closed.mrg 
gam@cogito:~/mit/eacl09/posteval$ cat conll08_submissions/posteval_henderson.wsj.closed.mrg conll08_submissions/posteval_henderson.brown.closed.mrg > conll08_submissions/posteval_henderson.wsj.brown.closed.mrg 

gam@cogito:~/mit/eacl09/posteval$ ./nonplanar_pr_wsjbrown.sh
posteval_che.wsj.brown.closed.mrg ...
che.wsj.brown.np.eval done
posteval_ciaramita.wsj.brown.closed.mrg ...
ciaramita.wsj.brown.np.eval done
posteval_henderson.wsj.brown.closed.mrg ...
henderson.wsj.brown.np.eval done
posteval_johansson.wsj.brown.closed.mrg ...
johansson.wsj.brown.np.eval done
posteval_lluis.wsj.brown.closed.mrg ...
lluis.wsj.brown.np.eval done
posteval_zhao.wsj.brown.closed.mrg ...
zhao.wsj.brown.np.eval done

gam@cogito:~/mit/conll2008$ ./tools/eval08-exactmatch.pl -q -g ../eacl09/posteval/test.wsj.brown.closed.GOLD -s ../eacl09/posteval/conll08_submissions/posteval_johansson.wsj.brown.closed.mrg > ../eacl09/posteval/conll08_submissions/posteval_johansson.wsj.brown.closed.mrg.eval
gam@cogito:~/mit/conll2008$ ./tools/eval08-exactmatch.pl -q -g ../eacl09/posteval/test.wsj.brown.closed.GOLD -s ../eacl09/posteval/conll08_submissions/posteval_ciaramita.wsj.brown.closed.mrg > ../eacl09/posteval/conll08_submissions/posteval_ciaramita.wsj.brown.closed.mrg.eval
gam@cogito:~/mit/conll2008$ ./tools/eval08-exactmatch.pl -q -g ../eacl09/posteval/test.wsj.brown.closed.GOLD -s ../eacl09/posteval/conll08_submissions/posteval_che.wsj.brown.closed.mrg > ../eacl09/posteval/conll08_submissions/posteval_che.wsj.brown.closed.mrg.eval
gam@cogito:~/mit/conll2008$ ./tools/eval08-exactmatch.pl -q -g ../eacl09/posteval/test.wsj.brown.closed.GOLD -s ../eacl09/posteval/conll08_submissions/posteval_zhao.wsj.brown.closed.mrg > ../eacl09/posteval/conll08_submissions/posteval_zhao.wsj.brown.closed.mrg.eval
gam@cogito:~/mit/conll2008$ ./tools/eval08-exactmatch.pl -q -g ../eacl09/posteval/test.wsj.brown.closed.GOLD -s ../eacl09/posteval/conll08_submissions/posteval_lluis.wsj.brown.closed.mrg > ../eacl09/posteval/conll08_submissions/posteval_lluis.wsj.brown.closed.mrg.eval
gam@cogito:~/mit/conll2008$ ./tools/eval08-exactmatch.pl -q -g ../eacl09/posteval/test.wsj.brown.closed.GOLD -s ../eacl09/posteval/conll08_submissions/posteval_henderson.wsj.brown.closed.mrg > ../eacl09/posteval/conll08_submissions/posteval_henderson.wsj.brown.closed.mrg.eval


gam@cogito:~/mit/eacl09/posteval$ tail -n 25 conll08_submissions/*.wsj.brown.np.eval

gam@cogito:~/mit/conll2008$ head -n 31 ../eacl09/posteval/conll08_submissions/posteval_zhao.wsj.brown.closed.mrg.eval

Tue Oct  7 10:20:08 CEST 2008

. to compute graphs that are trees:

gam@cogito:~/mit/conll2008/tools$ ./treerf.pl ../conll08st/train/train.closed
39279 CoNLL records done
8402 CoNLL trees

. to compute NPSX, NPSS, UNPSX and UNPSS on test.wsj-brown data set:



gam@cogito:~/mit/conll2008/tools$ ./nonplanar_pr.pl ../../eacl09/posteval/test.wsj.brown.closed.GOLD ../../eacl09/eacl09-results/synt-n-srl-g/test.wsj-brown.conll08 > ../../eacl09/eacl09-results/synt-n-srl-g/test.wsj-brown.conll08.np.eval

gam@cogito:~/mit/conll2008/tools$ tail -n 25 ../../eacl09/eacl09-results/synt-n-srl-g/test.wsj-brown.conll08.np.eval
2824 CoNLL records read
SX P 56803 / 64883 * 100 = 87.55 %
SX R 56803 / 64883 * 100 = 87.55 %
SX F1 87.55 %

SS P 18486 / 24287 * 100 = 76.11 %
SS R 18486 / 26145 * 100 = 70.71 %
SS F1 73.31 %

NPSX P 59 / 127 * 100 = 46.46 %
NPSX R 59 / 411 * 100 = 14.36 %
NPSX F1 21.93 %

uNPSX P 68 / 127 * 100 = 53.54 %
uNPSX R 68 / 411 * 100 = 16.55 %
uNPSX F1 25.28 %

NPSS P 794 / 1279 * 100 = 62.08 %
NPSS R 794 / 2697 * 100 = 29.44 %
NPSS F1 39.94 %

uNPSS P 890 / 1279 * 100 = 69.59 %
uNPSS R 890 / 2697 * 100 = 33.00 %
uNPSS F1 44.77 %

. to compute NPSX, NPSS, UNPSX and UNPSS on posteval models (johansson, ciaramita, che, zhao, henderson, samuelsson, lluis, sun):

gam@cogito:~/mit/eacl09/posteval$ ./nonplanar_pr.sh
posteval_che.wsj.closed.mrg ...
che.wsj.closed.np.eval done
posteval_ciaramita.wsj.closed.mrg ...
ciaramita.wsj.closed.np.eval done
posteval_henderson.wsj.closed.mrg ...
henderson.wsj.closed.np.eval done
posteval_johansson.wsj.closed.mrg ...
johansson.wsj.closed.np.eval done
posteval_lluis.wsj.closed.mrg ...
lluis.wsj.closed.np.eval done
posteval_samuelsson.wsj.closed.mrg ...
samuelsson.wsj.closed.np.eval done
posteval_sun.wsj.closed.mrg ...
sun.wsj.closed.np.eval done
posteval_zhao.wsj.closed.mrg ...
zhao.wsj.closed.np.eval done

gam@cogito:~/mit/eacl09/posteval$ tail -n 25 conll08_submissions/*.wsj.closed.np.eval 
==> conll08_submissions/che.wsj.closed.np.eval <==
2399 CoNLL records read
SX P 50471 / 57676 * 100 = 87.51 %
SX R 50471 / 57676 * 100 = 87.51 %
SX F1 87.51 %

SS P 16994 / 21001 * 100 = 80.92 %
SS R 16994 / 23286 * 100 = 72.98 %
SS F1 76.74 %

NPSX P 0 / 0 * 100 = undef
NPSX R 0 / 325 * 100 = 0.00 %
NPSX F1 undef

uNPSX P 0 / 0 * 100 = undef
uNPSX R 0 / 325 * 100 = 0.00 %
uNPSX F1 undef

NPSS P 823 / 1406 * 100 = 58.53 %
NPSS R 823 / 2436 * 100 = 33.78 %
NPSS F1 42.84 %

uNPSS P 945 / 1406 * 100 = 67.21 %
uNPSS R 945 / 2436 * 100 = 38.79 %
uNPSS F1 49.19 %


==> conll08_submissions/ciaramita.wsj.closed.np.eval <==
2399 CoNLL records read
SX P 50877 / 57676 * 100 = 88.21 %
SX R 50877 / 57676 * 100 = 88.21 %
SX F1 88.21 %

SS P 17140 / 21360 * 100 = 80.24 %
SS R 17140 / 23286 * 100 = 73.61 %
SS F1 76.78 %

NPSX P 56 / 273 * 100 = 20.51 %
NPSX R 56 / 325 * 100 = 17.23 %
NPSX F1 18.73 %

uNPSX P 66 / 273 * 100 = 24.18 %
uNPSX R 66 / 325 * 100 = 20.31 %
uNPSX F1 22.07 %

NPSS P 865 / 1381 * 100 = 62.64 %
NPSS R 865 / 2436 * 100 = 35.51 %
NPSS F1 45.32 %

uNPSS P 989 / 1381 * 100 = 71.61 %
uNPSS R 989 / 2436 * 100 = 40.60 %
uNPSS F1 51.82 %


==> conll08_submissions/henderson.wsj.closed.np.eval <==
2399 CoNLL records read
SX P 51022 / 57676 * 100 = 88.46 %
SX R 51022 / 57676 * 100 = 88.46 %
SX F1 88.46 %

SS P 14898 / 19169 * 100 = 77.72 %
SS R 14898 / 23286 * 100 = 63.98 %
SS F1 70.18 %

NPSX P 47 / 101 * 100 = 46.53 %
NPSX R 47 / 325 * 100 = 14.46 %
NPSX F1 22.07 %

uNPSX P 55 / 101 * 100 = 54.46 %
uNPSX R 55 / 325 * 100 = 16.92 %
uNPSX F1 25.82 %

NPSS P 45 / 62 * 100 = 72.58 %
NPSS R 45 / 2436 * 100 = 1.85 %
NPSS F1 3.60 %

uNPSS P 51 / 62 * 100 = 82.26 %
uNPSS R 51 / 2436 * 100 = 2.09 %
uNPSS F1 4.08 %


==> conll08_submissions/johansson.wsj.closed.np.eval <==
2399 CoNLL records read
SX P 51981 / 57676 * 100 = 90.13 %
SX R 51981 / 57676 * 100 = 90.13 %
SX F1 90.13 %

SS P 18329 / 22275 * 100 = 82.29 %
SS R 18329 / 23286 * 100 = 78.71 %
SS F1 80.46 %

NPSX P 62 / 128 * 100 = 48.44 %
NPSX R 62 / 325 * 100 = 19.08 %
NPSX F1 27.37 %

uNPSX P 67 / 128 * 100 = 52.34 %
uNPSX R 67 / 325 * 100 = 20.62 %
uNPSX F1 29.58 %

NPSS P 1123 / 1632 * 100 = 68.81 %
NPSS R 1123 / 2436 * 100 = 46.10 %
NPSS F1 55.21 %

uNPSS P 1255 / 1632 * 100 = 76.90 %
uNPSS R 1255 / 2436 * 100 = 51.52 %
uNPSS F1 61.70 %


==> conll08_submissions/lluis.wsj.closed.np.eval <==
2399 CoNLL records read
SX P 49911 / 57676 * 100 = 86.54 %
SX R 49911 / 57676 * 100 = 86.54 %
SX F1 86.54 %

SS P 14960 / 20673 * 100 = 72.36 %
SS R 14960 / 23286 * 100 = 64.24 %
SS F1 68.06 %

NPSX P 0 / 0 * 100 = undef
NPSX R 0 / 325 * 100 = 0.00 %
NPSX F1 undef

uNPSX P 0 / 0 * 100 = undef
uNPSX R 0 / 325 * 100 = 0.00 %
uNPSX F1 undef

NPSS P 492 / 876 * 100 = 56.16 %
NPSS R 492 / 2436 * 100 = 20.20 %
NPSS F1 29.71 %

uNPSS P 589 / 876 * 100 = 67.24 %
uNPSS R 589 / 2436 * 100 = 24.18 %
uNPSS F1 35.57 %


==> conll08_submissions/samuelsson.wsj.closed.np.eval <==
2399 CoNLL records read
SX P 50387 / 57676 * 100 = 87.36 %
SX R 50387 / 57676 * 100 = 87.36 %
SX F1 87.36 %

SS P 15888 / 21822 * 100 = 72.81 %
SS R 15888 / 23286 * 100 = 68.23 %
SS F1 70.44 %

NPSX P 10 / 555 * 100 = 1.80 %
NPSX R 10 / 325 * 100 = 3.08 %
NPSX F1 2.27 %

uNPSX P 10 / 555 * 100 = 1.80 %
uNPSX R 10 / 325 * 100 = 3.08 %
uNPSX F1 2.27 %

NPSS P 760 / 1839 * 100 = 41.33 %
NPSS R 760 / 2436 * 100 = 31.20 %
NPSS F1 35.56 %

uNPSS P 892 / 1839 * 100 = 48.50 %
uNPSS R 892 / 2436 * 100 = 36.62 %
uNPSS F1 41.73 %


==> conll08_submissions/sun.wsj.closed.np.eval <==
2399 CoNLL records read
SX P 49816 / 57676 * 100 = 86.37 %
SX R 49816 / 57676 * 100 = 86.37 %
SX F1 86.37 %

SS P 16023 / 26733 * 100 = 59.94 %
SS R 16023 / 23286 * 100 = 68.81 %
SS F1 64.07 %

NPSX P 0 / 0 * 100 = undef
NPSX R 0 / 325 * 100 = 0.00 %
NPSX F1 undef

uNPSX P 0 / 0 * 100 = undef
uNPSX R 0 / 325 * 100 = 0.00 %
uNPSX F1 undef

NPSS P 597 / 1521 * 100 = 39.25 %
NPSS R 597 / 2436 * 100 = 24.51 %
NPSS F1 30.17 %

uNPSS P 782 / 1521 * 100 = 51.41 %
uNPSS R 782 / 2436 * 100 = 32.10 %
uNPSS F1 39.52 %


==> conll08_submissions/zhao.wsj.closed.np.eval <==
2399 CoNLL records read
SX P 51051 / 57676 * 100 = 88.51 %
SX R 51051 / 57676 * 100 = 88.51 %
SX F1 88.51 %

SS P 17237 / 21239 * 100 = 81.16 %
SS R 17237 / 23286 * 100 = 74.02 %
SS F1 77.43 %

NPSX P 0 / 80 * 100 = undef
NPSX R 0 / 325 * 100 = 0.00 %
NPSX F1 undef

uNPSX P 0 / 80 * 100 = undef
uNPSX R 0 / 325 * 100 = 0.00 %
uNPSX F1 undef

NPSS P 907 / 1520 * 100 = 59.67 %
NPSS R 907 / 2436 * 100 = 37.23 %
NPSS F1 45.85 %

uNPSS P 1011 / 1520 * 100 = 66.51 %
uNPSS R 1011 / 2436 * 100 = 41.50 %
uNPSS F1 51.11 %



gam@cogito:~/mit/eacl09/posteval$ cut -f1-8 test.wsj.closed.GOLD |paste - conll08_submissions/posteval_henderson.wsj.closed |perl -wnl -e 's/\s+$//g; print;' |perl -F"\s+" -awnl -e 'if (@F) {print join "\t", @F[0..7,9..$#F];}else{print;}' > conll08_submissions/posteval_henderson.wsj.closed.mrg
gam@cogito:~/mit/eacl09/posteval$ perl -00  -wnl -e '$nr++; END {print $nr;}' conll08_submissions/posteval_henderson.wsj.closed.mrg2399
gam@cogito:~/mit/eacl09/posteval$ perl -00  -wnl -e '$nr++; END {print $nr;}' test.wsj.closed.GOLD2399


Wed Oct  1 13:53:31 CEST 2008

. to compute NPSX, NPSS, UNPSX and UNPSS:

gam@cogito:~/mit/conll2008/tools$ bash nonplanar_pr.bash

gam@cogito:~/mit/conll2008/tools$ cat nonplanar_pr.bash
./nonplanar_pr.pl ../conll08st/devel/devel.closed ../../eacl09/eacl09-results/synt-e-srl-e/devel.blind.mode.conll08 > synt-e-srl-e.np.eval  
./nonplanar_pr.pl ../conll08st/devel/devel.closed ../../eacl09/eacl09-results/synt-g-srl-g/devel.blind.mode.conll08 > synt-g-srl-g.np.eval  
./nonplanar_pr.pl ../conll08st/devel/devel.closed ../../eacl09/eacl09-results/synt-n-srl-e/devel.blind.mode.deproj.conll08 > synt-n-srl-e.np.eval
./nonplanar_pr.pl ../conll08st/devel/devel.closed ../../eacl09/eacl09-results/synt-n-srl-g/dev.blind.res.synt_deproj.conll08 > synt-n-srl-g.np.eval
./nonplanar_pr.pl ../conll08st/devel/devel.closed ../../eacl09/eacl09-results/synt-n-srl-n/devel.blind.mode.deproj.conll08 > synt-n-srl-n.np.eval
./nonplanar_pr.pl ../conll08st/devel/devel.closed ../../eacl09/eacl09-results/synt-n-srl-proj/devel.blind.mode.deproj.conll08 > synt-n-srl-proj.np.eval

==> synt-e-srl-e.np.eval <==
1334 CoNLL records read
SX P 28626 / 33368 * 100 = 85.79 %
SX R 28626 / 33368 * 100 = 85.79 %
SX F1 85.79 %

SS P 9196 / 12202 * 100 = 75.36 %
SS R 9196 / 13865 * 100 = 66.33 %
SS F1 70.56 %

NPSX P 5 / 29 * 100 = 17.24 %
NPSX R 5 / 118 * 100 = 4.24 %
NPSX F1 6.80 %

uNPSX P 5 / 29 * 100 = 17.24 %
uNPSX R 5 / 118 * 100 = 4.24 %
uNPSX F1 6.80 %

NPSS P 360 / 567 * 100 = 63.49 %
NPSS R 360 / 1520 * 100 = 23.68 %
NPSS F1 34.50 %

uNPSS P 414 / 567 * 100 = 73.02 %
uNPSS R 414 / 1520 * 100 = 27.24 %
uNPSS F1 39.67 %


==> synt-g-srl-g.np.eval <==
1334 CoNLL records read
SX P 28742 / 33368 * 100 = 86.14 %
SX R 28742 / 33368 * 100 = 86.14 %
SX F1 86.14 %

SS P 9394 / 12417 * 100 = 75.65 %
SS R 9394 / 13865 * 100 = 67.75 %
SS F1 71.49 %

NPSX P 0 / 6 * 100 = undef
NPSX R 0 / 118 * 100 = 0.00 %
NPSX F1 undef

uNPSX P 0 / 6 * 100 = undef
uNPSX R 0 / 118 * 100 = 0.00 %
uNPSX F1 undef

NPSS P 386 / 625 * 100 = 61.76 %
NPSS R 386 / 1520 * 100 = 25.39 %
NPSS F1 35.99 %

uNPSS P 444 / 625 * 100 = 71.04 %
uNPSS R 444 / 1520 * 100 = 29.21 %
uNPSS F1 41.40 %


==> synt-n-srl-e.np.eval <==
1334 CoNLL records read
SX P 28796 / 33368 * 100 = 86.30 %
SX R 28796 / 33368 * 100 = 86.30 %
SX F1 86.30 %

SS P 9444 / 12386 * 100 = 76.25 %
SS R 9444 / 13865 * 100 = 68.11 %
SS F1 71.95 %

NPSX P 19 / 58 * 100 = 32.76 %
NPSX R 19 / 118 * 100 = 16.10 %
NPSX F1 21.59 %

uNPSX P 23 / 58 * 100 = 39.66 %
uNPSX R 23 / 118 * 100 = 19.49 %
uNPSX F1 26.14 %

NPSS P 414 / 650 * 100 = 63.69 %
NPSS R 414 / 1520 * 100 = 27.24 %
NPSS F1 38.16 %

uNPSS P 472 / 650 * 100 = 72.62 %
uNPSS R 472 / 1520 * 100 = 31.05 %
uNPSS F1 43.50 %


==> synt-n-srl-g.np.eval <==
1334 CoNLL records read
SX P 28740 / 33368 * 100 = 86.13 %
SX R 28740 / 33368 * 100 = 86.13 %
SX F1 86.13 %

SS P 9405 / 12292 * 100 = 76.51 %
SS R 9405 / 13865 * 100 = 67.83 %
SS F1 71.91 %

NPSX P 15 / 61 * 100 = 24.59 %
NPSX R 15 / 118 * 100 = 12.71 %
NPSX F1 16.76 %

uNPSX P 19 / 61 * 100 = 31.15 %
uNPSX R 19 / 118 * 100 = 16.10 %
uNPSX F1 21.23 %

NPSS P 389 / 632 * 100 = 61.55 %
NPSS R 389 / 1520 * 100 = 25.59 %
NPSS F1 36.15 %

uNPSS P 445 / 632 * 100 = 70.41 %
uNPSS R 445 / 1520 * 100 = 29.28 %
uNPSS F1 41.36 %


==> synt-n-srl-n.np.eval <==
1334 CoNLL records read
SX P 28924 / 33368 * 100 = 86.68 %
SX R 28924 / 33368 * 100 = 86.68 %
SX F1 86.68 %

SS P 8640 / 11339 * 100 = 76.20 %
SS R 8640 / 13865 * 100 = 62.32 %
SS F1 68.56 %

NPSX P 17 / 64 * 100 = 26.56 %
NPSX R 17 / 118 * 100 = 14.41 %
NPSX F1 18.68 %

uNPSX P 23 / 64 * 100 = 35.94 %
uNPSX R 23 / 118 * 100 = 19.49 %
uNPSX F1 25.27 %

NPSS P 33 / 42 * 100 = 78.57 %
NPSS R 33 / 1520 * 100 = 2.17 %
NPSS F1 4.23 %

uNPSS P 37 / 42 * 100 = 88.10 %
uNPSS R 37 / 1520 * 100 = 2.43 %
uNPSS F1 4.74 %


==> synt-n-srl-proj.np.eval <==
1334 CoNLL records read
SX P 28674 / 33368 * 100 = 85.93 %
SX R 28674 / 33368 * 100 = 85.93 %
SX F1 85.93 %

SS P 8882 / 12085 * 100 = 73.50 %
SS R 8882 / 13865 * 100 = 64.06 %
SS F1 68.45 %

NPSX P 18 / 53 * 100 = 33.96 %
NPSX R 18 / 118 * 100 = 15.25 %
NPSX F1 21.05 %

uNPSX P 24 / 53 * 100 = 45.28 %
uNPSX R 24 / 118 * 100 = 20.34 %
uNPSX F1 28.07 %

NPSS P 0 / 0 * 100 = undef
NPSS R 0 / 1520 * 100 = 0.00 %
NPSS F1 undef

uNPSS P 0 / 0 * 100 = undef
uNPSS R 0 / 1520 * 100 = 0.00 %
uNPSS F1 undef


. to compute the base set that generate pairs of crossing links:

gam@cogito:~/mit/conll2008/tools$ tail -n 17 synt-*
==> synt-e-srl-e.np.eval <==
1334 CoNLL records read
SX P 28626 / 33368 * 100 = 85.79 %
SX R 28626 / 33368 * 100 = 85.79 %
SX F1 85.79 %

SS P 9196 / 12202 * 100 = 75.36 %
SS R 9196 / 13865 * 100 = 66.33 %
SS F1 70.56 %

NPSX P 5 / 29 * 100 = 17.24 %
NPSX R 5 / 118 * 100 = 4.24 %
NPSX F1 6.80 %

NPSS P 360 / 567 * 100 = 63.49 %
NPSS R 360 / 1520 * 100 = 23.68 %
NPSS F1 34.50 %


==> synt-g-srl-g.np.eval <==
1334 CoNLL records read
SX P 28742 / 33368 * 100 = 86.14 %
SX R 28742 / 33368 * 100 = 86.14 %
SX F1 86.14 %

SS P 9394 / 12417 * 100 = 75.65 %
SS R 9394 / 13865 * 100 = 67.75 %
SS F1 71.49 %

NPSX P 0 / 6 * 100 = undef
NPSX R 0 / 118 * 100 = 0.00 %
NPSX F1 undef

NPSS P 386 / 625 * 100 = 61.76 %
NPSS R 386 / 1520 * 100 = 25.39 %
NPSS F1 35.99 %


==> synt-n-srl-e.np.eval <==
1334 CoNLL records read
SX P 28796 / 33368 * 100 = 86.30 %
SX R 28796 / 33368 * 100 = 86.30 %
SX F1 86.30 %

SS P 9444 / 12386 * 100 = 76.25 %
SS R 9444 / 13865 * 100 = 68.11 %
SS F1 71.95 %

NPSX P 19 / 58 * 100 = 32.76 %
NPSX R 19 / 118 * 100 = 16.10 %
NPSX F1 21.59 %

NPSS P 414 / 650 * 100 = 63.69 %
NPSS R 414 / 1520 * 100 = 27.24 %
NPSS F1 38.16 %


==> synt-n-srl-g.np.eval <==
1334 CoNLL records read
SX P 28740 / 33368 * 100 = 86.13 %
SX R 28740 / 33368 * 100 = 86.13 %
SX F1 86.13 %

SS P 9405 / 12292 * 100 = 76.51 %
SS R 9405 / 13865 * 100 = 67.83 %
SS F1 71.91 %

NPSX P 15 / 61 * 100 = 24.59 %
NPSX R 15 / 118 * 100 = 12.71 %
NPSX F1 16.76 %

NPSS P 389 / 632 * 100 = 61.55 %
NPSS R 389 / 1520 * 100 = 25.59 %
NPSS F1 36.15 %


==> synt-n-srl-n.np.eval <==
1334 CoNLL records read
SX P 28924 / 33368 * 100 = 86.68 %
SX R 28924 / 33368 * 100 = 86.68 %
SX F1 86.68 %

SS P 8640 / 11339 * 100 = 76.20 %
SS R 8640 / 13865 * 100 = 62.32 %
SS F1 68.56 %

NPSX P 17 / 64 * 100 = 26.56 %
NPSX R 17 / 118 * 100 = 14.41 %
NPSX F1 18.68 %

NPSS P 33 / 42 * 100 = 78.57 %
NPSS R 33 / 1520 * 100 = 2.17 %
NPSS F1 4.23 %


==> synt-n-srl-proj.np.eval <==
1334 CoNLL records read
SX P 28674 / 33368 * 100 = 85.93 %
SX R 28674 / 33368 * 100 = 85.93 %
SX F1 85.93 %

SS P 8882 / 12085 * 100 = 73.50 %
SS R 8882 / 13865 * 100 = 64.06 %
SS F1 68.45 %

NPSX P 18 / 53 * 100 = 33.96 %
NPSX R 18 / 118 * 100 = 15.25 %
NPSX F1 21.05 %

NPSS P 0 / 0 * 100 = undef
NPSS R 0 / 1520 * 100 = 0.00 %
NPSS F1 undef

. to compute Precision/Recall figures of crossing link pairs:
	. _nonplanarsubg in CoNLL.pm
	. gam@cogito:~/mit/conll2008/tools$ ./nonplanar_pr.pl ../conll08st/devel/devel.closed
# 1
1:      1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 
2:      1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 
3:      1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 
4:      1 {A1} 3 {A2} 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 
5:      1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 
6:      1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 
7:      1 2 3 {A1} {AM-MOD} 6 7 {A2} 9 10 11 12 {AM-TMP} 14 {AM-ADV} 16 17 18 19 20 21 22 23 24 25 
8:      1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 
9:      1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 
10:     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 
11:     1 2 3 4 5 6 7 8 9 {A1} 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 
12:     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 
13:     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 
14:     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 
15:     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 
16:     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 {A1} 18 19 20 21 22 23 24 25 
17:     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 
18:     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 
19:     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 
20:     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 
21:     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 
22:     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 
23:     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 
24:     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 
25:     1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 

1 CoNLL records read

Mon Sep 29 15:01:17 CEST 2008

. to generate and store data sets with hyhenation features:

gam@cogito:~/mit/conll2008/tools$ ./conll_to_eaclf.pl ../conll08st/train/train.closed.SUrm ../conll08st/train/train.closed.SUrm.rolesets > ../conll08st/train/train.closed.SUrm.hyph.eaclf
39279 CoNLL records read

gam@cogito:~/mit/conll2008/tools$ ./conll_to_eaclf.pl ../conll08st/devel/devel.closed.SUrm ../conll08st/train/train.closed.SUrm.rolesets > ../conll08st/devel/devel.closed.SUrm.hyph.eaclf
1334 CoNLL records read



gam@cogito:~/mit/conll2008/conll08st/train$ tar cvf train-devel.closed.SUrm.hyph.eaclf.tar train.closed.SUrm.hyph.eaclf

gam@cogito:~/mit/conll2008/conll08st/devel tar -rf ../train/train-devel.closed.SUrm.hyph.eaclf.tar devel.closed.SUrm.hyph.eaclf

gam@cogito:~/mit/conll2008/conll08st/train$ gzip train-devel.closed.SUrm.hyph.eaclf.tar

gam@cogito:~/mit/conll2008/conll08st/train$ scp train-devel.closed.SUrm.hyph.eaclf.tar.gz 129.194.18.81:conll2008st/data/eaclf/

Mon Sep 22 18:47:00 CEST 2008

. to store eacl data sets:

gam@cogito:~/mit/conll2008/conll08st$ scp data-sets.closed.SUrm.eaclf.tar.gz 129.194.18.81:/home/gam/conll2008st/data/

. to format eacl data sets:

gam@cogito:~/mit/conll2008/tools$ ./conll_to_conllSUrm.pl ../conll08st/train/train.closed > ../conll08st/train/train.closed.SUrm
39279 CoNLL records read
gam@cogito:~/mit/conll2008/tools$ ./dumprolesets.pl ../conll08st/train/train.closed.SUrm ../conll08st/train/train.closed.SUrm.rolesets
958167 CoNLL rows read
gam@cogito:~/mit/conll2008/tools$ ./conll_to_eaclf.pl ../conll08st/train/train.closed.SUrm ../conll08st/train/train.closed.SUrm.rolesets > ../conll08st/train/train.closed.SUrm.eaclf
39279 CoNLL records read
gam@cogito:~/mit/conll2008/tools$ ./conll_to_eaclf.pl ../conll08st/devel/devel.closed.SUrm ../conll08st/train/train.closed.SUrm.rolesets > ../conll08st/devel/devel.closed.SUrm.eaclf
1334 CoNLL records read


Wed Jul  9 22:40:34 CEST 2008

. to compute outgoing and ingoing planarity degree stats on semantic graphs:

Thu Jul  3 19:48:10 CEST 2008

. to compute projectivity, planarity stats on semantic graphs:

gam@cogito:~/mit/conll2008/tools$ ./conlledgenpstats.pl ../jamesh/devel.failures ../conll08st/devel/devel.closed.pprojH.SUrmp.SUrma 0 0 &> devel.derivations.stats
gam@cogito:~/mit/conll2008/tools$ ./goldconlledgenpstats.pl ../conll08st/devel/devel.closed.pprojH.SUrmp.SUrma 0 0 &> devel.statsgam@cogito:~/mit/conll2008/tools$ less devel.stats
gam@cogito:~/mit/conll2008/tools$ ./goldconlledgenpstats.pl ../conll08st/train/train.closed.pprojH.SUrmp.SUrma 0 0 &> train.stats; ./conlledgenpstats.pl ../jamesh/train.failures ../conll08st/train/train.closed.pprojH.SUrmp.SUrma 0 0 &> train.derivations.stats
gam@cogito:~/mit/conll2008/tools$ ./conlledgenpstats.pl ../jamesh/train.failures ../conll08st/train/train.closed.pprojH.SUrmp.SUrma 0 0 &> train.derivations.stats

. to compute nonproj stats on the syntactic graphs:

gam@cogito:~/mit/conll2008/tools$ cat ../conll08st/train/train.closed |./goldnpsyntstats.pl 
39279 CoNLL rec done
NP EDGE 1/0: 954443, 3724, 99.61

Mon Jun 23 17:21:07 CEST 2008

. projectivisatin stats that suggest the heuristics numbered 1 is the best one:

gam@cogito:~/mit/conll2008/tools$ ./projectivise_srl.pl ../conll08st/devel/devel.closed.pprojH.SUrmp.SUrma ../conll08st/devel/devel.closed.pprojH.SUrmp.SUrma.closure 0 0
1334 CoNLL rec done

H0: 52 NomBank lifted 0.95
H0: 8 NomBank removed 0.15
H0: 1054 PropBank lifted 12.53
H0: 72 PropBank removed 0.86
H0: removed 0.58
H0: lifted 7.98

H1: 368 NomBank lifted 6.75
H1: 23 NomBank removed 0.42
H1: 512 PropBank lifted 6.09
H1: 32 PropBank removed 0.38
H1: removed 0.40
H1: lifted 6.35

5451 NomBank srls 562 non-proj 10.31
8414 PropBank srls 1545 non-proj 18.36
13865 srls 2107 non-proj 15.20

gam@cogito:~/mit/conll2008/tools$ ./projectivise_srl.pl ../conll08st/train/train.closed.pprojH.SUrmp.SUrma ../conll08st/train/train.closed.pprojH.SUrmp.SUrma.closure 0 0
39279 CoNLL rec done

H0: 1558 NomBank lifted 1.01
H0: 136 NomBank removed 0.09
H0: 30470 PropBank lifted 12.75
H0: 1921 PropBank removed 0.80
H0: removed 0.52
H0: lifted 8.14

H1: 11040 NomBank lifted 7.13
H1: 644 NomBank removed 0.42
H1: 13645 PropBank lifted 5.71
H1: 775 PropBank removed 0.32
H1: removed 0.36
H1: lifted 6.27

154758 NomBank srls 16643 non-proj 10.75
238941 PropBank srls 43313 non-proj 18.13
393699 srls 59956 non-proj 15.23

Fri Jun 20 18:12:19 CEST 2008

. to do:

PROJECTIVISATION and INVERSION

. to generate srl features for the flip model:

gam@cogito:~/mit/conll2008$ cat conll08st/train/train.closed.pprojH.SUrmp.SUrma |./srl_set.pl > _trainsrlfeats.ih
gam@cogito:~/mit/conll2008$ cat conll08st/train/train.closed.pprojH.SUrmp.SUrma |./srl_set.pl > _srlfeatures.ih


Mon Jun  9 15:48:23 CEST 2008

. to generate the syntactic closure of syntatic adjacency matrix:

gam@cogito:~/mit/conll2008/tools$ ./synt_closure.pl projectiviseme > projectiviseme.closure 
18 CoNLL records read

gam@cogito:~/mit/conll2008/tools$ ./synt_closure.pl ../conll08st/devel/devel.closed.pprojH.SUrmp.SUrma > ../conll08st/devel/devel.closed.pprojH.SUrmp.SUrma.closure
1334 CoNLL records read



. to projectivize semantic role graphical structures:

gam@cogito:~/mit/conll2008/tools$ ./projectivise_srl.pl ../conll08st/devel/devel.closed.pprojH.SUrmp.SUrma ../conll08st/devel/devel.closed.pprojH.SUrmp.SUrma.closure 224

gam@cogito:~/mit/conll2008/tools$ ./projectivise_srl.pl projectiviseme projectiviseme.closure 17

Thu May 15 13:48:55 EDT 2008

. to lemmatize unknown predicates:

gam@cogito:~/mit/conll2008/tools$ cat interm.res.ivanf.proj.conll08 |./lemmatize_unkpred.pl
182 unknown predicates # only one occurence of utilize.01

. to doublep-check formatting:

gam@cogito:~/mit/conll2008/tools$ ./eval08.pl -q -g ../ivant/4gab/devel.closed.trunc -s interm.res.ivanf.proj.conll08 
  SYNTACTIC SCORES:
  Labeled   attachment score: 28358 / 33284 * 100 = 85.20 %
  Unlabeled attachment score: 29513 / 33284 * 100 = 88.67 %
  Label accuracy score:       29998 / 33284 * 100 = 90.13 %

  SEMANTIC SCORES: 
  Labeled precision:          (8125 + 4936) / (10694 + 5575) * 100 = 80.28 %
  Labeled recall:             (8125 + 4936) / (13829 + 6372) * 100 = 64.66 %
  Labeled F1:                 71.63 
  Unlabeled precision:        (9301 + 5302) / (10694 + 5575) * 100 = 89.76 %
  Unlabeled recall:           (9301 + 5302) / (13829 + 6372) * 100 = 72.29 %
  Unlabeled F1:               80.08 

  OVERALL MACRO SCORES (Wsem = 0.50):
  Labeled macro precision:    82.74 %
  Labeled macro recall:       74.93 %
  Labeled macro F1:           78.64 %
  Unlabeled macro precision:  89.21 %
  Unlabeled macro recall:     80.48 %
  Unlabeled macro F1:         84.62 %

  OVERALL MICRO SCORES:
  Labeled micro precision:    (28358 + 8125 + 4936) / (33284 + 10694 + 5575) * 100 = 83.59 %
  Labeled micro recall:       (28358 + 8125 + 4936) / (33284 + 13829 + 6372) * 100 = 77.44 %
  Labeled micro F1:           80.40 
  Unlabeled micro precision:  (29513 + 9301 + 5302) / (33284 + 10694 + 5575) * 100 = 89.03 %
  Unlabeled micro recall:     (29513 + 9301 + 5302) / (33284 + 13829 + 6372) * 100 = 82.48 %
  Unlabeled micro F1:         85.63 

  Note: skipped SU predicates and arguments
        Skipped 241 SU predicates and 717 SU arguments in gold output
        Skipped 0 SU predicates and 0 SU arguments is system output


gam@cogito:~/mit/conll2008/tools$ ./eval08.pl -q -g ../ivant/4gab/devel.closed.trunc -s interm.blind.res.ivanf.proj.conll08   SYNTACTIC SCORES:
  Labeled   attachment score: 28354 / 33284 * 100 = 85.19 %
  Unlabeled attachment score: 29511 / 33284 * 100 = 88.66 %
  Label accuracy score:       30001 / 33284 * 100 = 90.14 %

  SEMANTIC SCORES: 
  Labeled precision:          (8133 + 4949) / (10897 + 5736) * 100 = 78.65 %
  Labeled recall:             (8133 + 4949) / (13829 + 6372) * 100 = 64.76 %
  Labeled F1:                 71.03 
  Unlabeled precision:        (9310 + 5322) / (10897 + 5736) * 100 = 87.97 %
  Unlabeled recall:           (9310 + 5322) / (13829 + 6372) * 100 = 72.43 %
  Unlabeled F1:               79.45 

  OVERALL MACRO SCORES (Wsem = 0.50):
  Labeled macro precision:    81.92 %
  Labeled macro recall:       74.97 %
  Labeled macro F1:           78.29 %
  Unlabeled macro precision:  88.32 %
  Unlabeled macro recall:     80.55 %
  Unlabeled macro F1:         84.25 %

  OVERALL MICRO SCORES:
  Labeled micro precision:    (28354 + 8133 + 4949) / (33284 + 10897 + 5736) * 100 = 83.01 %
  Labeled micro recall:       (28354 + 8133 + 4949) / (33284 + 13829 + 6372) * 100 = 77.47 %
  Labeled micro F1:           80.15 
  Unlabeled micro precision:  (29511 + 9310 + 5322) / (33284 + 10897 + 5736) * 100 = 88.43 %
  Unlabeled micro recall:     (29511 + 9310 + 5322) / (33284 + 13829 + 6372) * 100 = 82.53 %
  Unlabeled micro F1:         85.38 

  Note: skipped SU predicates and arguments
        Skipped 241 SU predicates and 717 SU arguments in gold output
        Skipped 0 SU predicates and 0 SU arguments is system output



. to map CoNLL 07 format to CoNLL shared task 2008 format:

gam@cogito:~/mit/conll2008/tools$ ./conll07_to_conll.pl interm.res.ivanf.proj interm.res.ivanf.proj.conll07.deprojH > interm.res.ivanf.proj.conll08
1332 CoNLL records read
gam@cogito:~/mit/conll2008/tools$ ./conll07_to_conll.pl interm.blind.res.ivanf.proj interm.blind.res.ivanf.proj.conll07.deprojH > interm.blind.res.ivanf.proj.conll08
1332 CoNLL records read

. to deprojectivize data sets in CoNLL 07 format:

gam@cogito:~/mit/conll2008/tools/nivre/malt-1.0.4$ java -jar malt.jar -c pprojH -m deproj -i ../../interm.blind.res.ivanf.proj.conll07 -o ../../interm.blind.res.ivanf.proj.conll07.deprojH
-----------------------------------------------------------------------------
                          MaltParser 1.0.4                             
-----------------------------------------------------------------------------
         MALT (Models and Algorithms for Language Technology) Group          
             School of Mathematics and Systems Engineering (MSI)             
                        Vaxjo University, Sweden                             
-----------------------------------------------------------------------------

Started: Thu May 15 18:04:54 EDT 2008
Deprojectivize sentences from '../../interm.blind.res.ivanf.proj.conll07': 1 10 25 50 100 200 300 400 500 600 700 800 900 1000 1100 1200 1300 
Number of projectivized sentences: 1332
Finished: Thu May 15 18:04:56 EDT 2008
Deprojectivization time: 00:00:02 (2057 ms)

gam@cogito:~/mit/conll2008/tools/nivre/malt-1.0.4$ java -jar malt.jar -c pprojH -m deproj -i ../../interm.res.ivanf.proj.conll07 -o ../../interm.res.ivanf.proj.conll07.deprojH
-----------------------------------------------------------------------------
                          MaltParser 1.0.4                             
-----------------------------------------------------------------------------
         MALT (Models and Algorithms for Language Technology) Group          
             School of Mathematics and Systems Engineering (MSI)             
                        Vaxjo University, Sweden                             
-----------------------------------------------------------------------------

Started: Thu May 15 18:07:44 EDT 2008
Deprojectivize sentences from '../../interm.res.ivanf.proj.conll07': 1 10 25 50 100 200 300 400 500 600 700 800 900 1000 1100 1200 1300 
Number of projectivized sentences: 1332
Finished: Thu May 15 18:07:45 EDT 2008
Deprojectivization time: 00:00:01 (1453 ms)

. to generate CoNLL 2007 formatted data:

gam@cogito:~/mit/conll2008/tools$ ./conll_to_conll07.pl interm.res.ivanf.proj > interm.res.ivanf.proj.conll07
1332 CoNLL records read
gam@cogito:~/mit/conll2008/tools$ ./conll_to_conll07.pl interm.blind.res.ivanf.proj > interm.blind.res.ivanf.proj.conll07
1332 CoNLL records read



. to invert projectivisation and format *.res data sets:

gam@cogito:~/mit/conll2008/tools$ ./itjh_invproj.pl ../ivant/4gab/interm.res.ivanf > interm.res.ivanf.proj
1332 CoNLL records read
3 8
48 835 842
192 870 963 1113 1304
gam@cogito:~/mit/conll2008/tools$ ./itjh_invproj.pl ../ivant/4gab/interm.blind.res.ivanf > interm.blind.res.ivanf.proj
1332 CoNLL records read
3 9
48 835 842
192 553 870 963 1113 1304

. to eval:

gam@cogito:~/mit/conll2008/tools$ ./eval08.pl -q -g ../ivant/4gab/devel.closed.trunc -s interm.res.ivanf.proj
  SYNTACTIC SCORES:
  Labeled   attachment score: 28329 / 33284 * 100 = 85.11 %
  Unlabeled attachment score: 29486 / 33284 * 100 = 88.59 %
  Label accuracy score:       29960 / 33284 * 100 = 90.01 %

  SEMANTIC SCORES: 
  Labeled precision:          (8125 + 4936) / (10694 + 5575) * 100 = 80.28 %
  Labeled recall:             (8125 + 4936) / (13829 + 6372) * 100 = 64.66 %
  Labeled F1:                 71.63 
  Unlabeled precision:        (9301 + 5302) / (10694 + 5575) * 100 = 89.76 %
  Unlabeled recall:           (9301 + 5302) / (13829 + 6372) * 100 = 72.29 %
  Unlabeled F1:               80.08 

  OVERALL MACRO SCORES (Wsem = 0.50):
  Labeled macro precision:    82.70 %
  Labeled macro recall:       74.88 %
  Labeled macro F1:           78.60 %
  Unlabeled macro precision:  89.17 %
  Unlabeled macro recall:     80.44 %
  Unlabeled macro F1:         84.58 %

  OVERALL MICRO SCORES:
  Labeled micro precision:    (28329 + 8125 + 4936) / (33284 + 10694 + 5575) * 100 = 83.53 %
  Labeled micro recall:       (28329 + 8125 + 4936) / (33284 + 13829 + 6372) * 100 = 77.39 %
  Labeled micro F1:           80.34 
  Unlabeled micro precision:  (29486 + 9301 + 5302) / (33284 + 10694 + 5575) * 100 = 88.97 %
  Unlabeled micro recall:     (29486 + 9301 + 5302) / (33284 + 13829 + 6372) * 100 = 82.43 %
  Unlabeled micro F1:         85.58 

  Note: skipped SU predicates and arguments
        Skipped 241 SU predicates and 717 SU arguments in gold output
        Skipped 0 SU predicates and 0 SU arguments is system output

gam@cogito:~/mit/conll2008/tools$ ./eval08.pl -q -g ../ivant/4gab/devel.closed.trunc -s interm.blind.res.ivanf.proj  SYNTACTIC SCORES:
  Labeled   attachment score: 28325 / 33284 * 100 = 85.10 %
  Unlabeled attachment score: 29484 / 33284 * 100 = 88.58 %
  Label accuracy score:       29963 / 33284 * 100 = 90.02 %

  SEMANTIC SCORES: 
  Labeled precision:          (8133 + 4949) / (10897 + 5736) * 100 = 78.65 %
  Labeled recall:             (8133 + 4949) / (13829 + 6372) * 100 = 64.76 %
  Labeled F1:                 71.03 
  Unlabeled precision:        (9310 + 5322) / (10897 + 5736) * 100 = 87.97 %
  Unlabeled recall:           (9310 + 5322) / (13829 + 6372) * 100 = 72.43 %
  Unlabeled F1:               79.45 

  OVERALL MACRO SCORES (Wsem = 0.50):
  Labeled macro precision:    81.88 %
  Labeled macro recall:       74.93 %
  Labeled macro F1:           78.25 %
  Unlabeled macro precision:  88.28 %
  Unlabeled macro recall:     80.51 %
  Unlabeled macro F1:         84.21 %

  OVERALL MICRO SCORES:
  Labeled micro precision:    (28325 + 8133 + 4949) / (33284 + 10897 + 5736) * 100 = 82.95 %
  Labeled micro recall:       (28325 + 8133 + 4949) / (33284 + 13829 + 6372) * 100 = 77.42 %
  Labeled micro F1:           80.09 
  Unlabeled micro precision:  (29484 + 9310 + 5322) / (33284 + 10897 + 5736) * 100 = 88.38 %
  Unlabeled micro recall:     (29484 + 9310 + 5322) / (33284 + 13829 + 6372) * 100 = 82.48 %
  Unlabeled micro F1:         85.33 

  Note: skipped SU predicates and arguments
        Skipped 241 SU predicates and 717 SU arguments in gold output
        Skipped 0 SU predicates and 0 SU arguments is system output



Fri May  9 14:03:16 EDT 2008

. to ivan:

gam@cogito:~/mit/conll2008/tools$ ./dumprolesets.pl ../conll08st/train/train.closed ../conll08st/train/train.closed.rolesets
958167 CoNLL rows read
gam@cogito:~/mit/conll2008/tools$ ./conll_to_ivanf.pl ../conll08st/train/train.closed.pprojH.SUrmp.SUrma ../conll08st/train/train.closed.rolesets > conll_to_ivanf.pl.debug
101 CoNLL records read

Mon May  5 23:09:20 EDT 2008

. to projectivize and format SRL CONLL:

gam@cogito:~/mit/conll2008/tools$ ./projectivesrl.pl ../conll08st/train/train.closed.pprojH.SUrmp.SUrma > ../conll08st/train/train.closed.pprojH.SUrmp.SUrma.projsrl 2> ../conll08st/train/train.closed.pprojH.SUrmp.SUrma.projsrl.stderr; 

./projectivesrl.pl ../conll08st/devel/devel.closed.pprojH.SUrmp.SUrma > ../conll08st/devel/devel.closed.pprojH.SUrmp.SUrma.projsrl 2> ../conll08st/devel/devel.closed.pprojH.SUrmp.SUrma.projsrl.stderr

. to doublecheck projectivity:

gam@cogito:~/mit/conll2008/tools$ ./isprojectivesample.pl ../conll08st/devel/devel.closed.pprojH.SUrmp.SUrma.projsrl
1334 CoNLL records read

gam@cogito:~/mit/conll2008/tools$ ./isprojectivesample.pl ../conll08st/train/train.closed.pprojH.SUrmp.SUrma.projsrl
39279 CoNLL records read

	
Fri May  2 22:59:38 EDT 2008

. to projectivize CoNLL data:

gam@cogito:~/mit/conll2008/tools$ ./projectivize.pl ../conll08st/train/train.closed.pprojH.SUrmp.SUrma

Sun Apr 27 22:12:42 EDT 2008

. to debug projectivization (see srlstruct):

gam@cogito:~/mit/conll2008/tools$ ./projectivize.pl projectiviseme 7

. to sample nonprojective semantic structures:

gam@cogito:~/mit/conll2008/tools$ ./nonprojective.pl ../conll08st/devel/devel.closed.pprojH.SUrmp.SUrma > ../conll08st/devel/devel.closed.pprojH.SUrmp.SUrma.npsrl

gam@cogito:~/mit/conll2008/tools$ ./nonprojective.pl ../conll08st/devel/devel.closed.pprojH.SUrmp.SUrma > ../conll08st/devel/devel.closed.pprojH.SUrmp.SUrma.npsrl.columnstring

Thu Apr 24 13:40:41 EDT 2008

. to check well-formedness:

gam@cogito:~/mit/conll2008/tools$ ./eval08.pl -q -g ../conll08st/devel/devel.closed -s ../conll08st/devel/devel.closed.pprojH.SUrmp.SUrma
gam@cogito:~/mit/conll2008/tools$ ./eval08.pl -q -g ../conll08st/devel/devel.closed -s ../conll08st/devel/devel.closed.pprojHP.SUrmp.SUrma
gam@cogito:~/mit/conll2008/tools$ ./eval08.pl -q -g ../conll08st/devel/devel.closed -s ../conll08st/devel/devel.closed.pprojP.SUrmp.SUrma

. to remove .SU predicates and SU arguments:

gam@cogito:~/mit/conll2008/tools$ ./conll07_to_conllSUrm.pl ../conll08st/train/train.closed ../conll08st/train/train.conll07f.closed.pprojP > ../conll08st/train/train.closed.pprojP.SUrmp.SUrma
gam@cogito:~/mit/conll2008/tools$ ./conll07_to_conllSUrm.pl ../conll08st/train/train.closed ../conll08st/train/train.conll07f.closed.pprojHP > ../conll08st/train/train.closed.pprojHP.SUrmp.SUrma
gam@cogito:~/mit/conll2008/tools$ ./conll07_to_conllSUrm.pl ../conll08st/train/train.closed ../conll08st/train/train.conll07f.closed.pprojH > ../conll08st/train/train.closed.pprojH.SUrmp.SUrma
gam@cogito:~/mit/conll2008/tools$ ./conll07_to_conllSUrm.pl ../conll08st/devel/devel.closed ../conll08st/devel/devel.conll07f.closed.pprojHP > ../conll08st/devel/devel.closed.pprojHP.SUrmp.SUrma
gam@cogito:~/mit/conll2008/tools$ ./conll07_to_conllSUrm.pl ../conll08st/devel/devel.closed ../conll08st/devel/devel.conll07f.closed.pprojP > ../conll08st/devel/devel.closed.pprojP.SUrmp.SUrma
gam@cogito:~/mit/conll2008/tools$ ./conll07_to_conllSUrm.pl ../conll08st/devel/devel.closed ../conll08st/devel/devel.conll07f.closed.pprojH > ../conll08st/devel/devel.closed.pprojH.SUrmp.SUrma



. to generate dot code:

gam@cogito:~/mit/conll2008/tools$ cat ../conll08st/train/train.closed |./dot_conllf.pl 157

. to projectivize semantic dependency graphs:
	
gam@cogito:~/mit/conll2008/tools$ ./projectivize.pl ../conll08st/devel/devel.closed 2

Sat Apr 19 21:34:54 EDT 2008

. to scp:

gam@cogito:~/mit/conll2008/conll08st/train$ tar czvf train.tgz *.SUrm
train.closed.pprojHP.SUrm
train.closed.pprojH.SUrm
train.closed.pprojP.SUrm

gam@cogito:~/mit/conll2008/conll08st/devel$ tar czvf devel.tgz *.SUrm
devel.closed.pprojHP.SUrm
devel.closed.pprojH.SUrm
devel.closed.pprojP.SUrm


. to check well-formedness:

gam@cogito:~/mit/conll2008/tools$ ./eval08.pl -q -g ../conll08st/devel/devel.closed -s ../conll08st/devel/devel.closed.pprojH.SUrm
gam@cogito:~/mit/conll2008/tools$ ./eval08.pl -q -g ../conll08st/devel/devel.closed -s ../conll08st/devel/devel.closed.pprojHP.SUrm
gam@cogito:~/mit/conll2008/tools$ ./eval08.pl -q -g ../conll08st/devel/devel.closed -s ../conll08st/devel/devel.closed.pprojP.SUrm

. to remove .SU predicates:

gam@cogito:~/mit/conll2008/tools$ ./conll07_to_conllSUrm.pl ../conll08st/train/train.closed ../conll08st/train/train.conll07f.closed.pprojP > ../conll08st/train/train.closed.pprojP.SUrm
gam@cogito:~/mit/conll2008/tools$ ./conll07_to_conllSUrm.pl ../conll08st/train/train.closed ../conll08st/train/train.conll07f.closed.pprojHP > ../conll08st/train/train.closed.pprojHP.SUrm
gam@cogito:~/mit/conll2008/tools$ ./conll07_to_conllSUrm.pl ../conll08st/train/train.closed ../conll08st/train/train.conll07f.closed.pprojH > ../conll08st/train/train.closed.pprojH.SUrm
gam@cogito:~/mit/conll2008/tools$ ./conll07_to_conllSUrm.pl ../conll08st/devel/devel.closed ../conll08st/devel/devel.conll07f.closed.pprojHP > ../conll08st/devel/devel.closed.pprojHP.SUrm
gam@cogito:~/mit/conll2008/tools$ ./conll07_to_conllSUrm.pl ../conll08st/devel/devel.closed ../conll08st/devel/devel.conll07f.closed.pprojP > ../conll08st/devel/devel.closed.pprojP.SUrm
gam@cogito:~/mit/conll2008/tools$ ./conll07_to_conllSUrm.pl ../conll08st/devel/devel.closed ../conll08st/devel/devel.conll07f.closed.pprojH > ../conll08st/devel/devel.closed.pprojH.SUrm



. to test the inverse of Nivre's projectivising transforms:

gam@cogito:~/mit/conll2008/tools/nivre/malt-1.0.4$ java -jar malt.jar -c pprojP -m deproj -i ../../../conll08st/devel/devel.conll07f.closed.pprojP -o ../../../conll08st/devel/devel.conll07f.closed.depprojP
gam@cogito:~/mit/conll2008/tools/nivre/malt-1.0.4$ ../../eval07.pl -g ../../../conll08st/devel/devel.conll07f.closed -s ../../../conll08st/devel/devel.conll07f.closed.depprojP

gam@cogito:~/mit/conll2008/tools/nivre/malt-1.0.4$ java -jar malt.jar -c pprojH -m deproj -i ../../../conll08st/devel/devel.conll07f.closed.pprojH -o ../../../conll08st/devel/devel.conll07f.closed.depprojH
gam@cogito:~/mit/conll2008/tools/nivre/malt-1.0.4$ java -jar malt.jar -c pprojHP -m deproj -i ../../../conll08st/devel/devel.conll07f.closed.pprojHP -o ../../../conll08st/devel/devel.conll07f.closed.depprojHP

. to projectivize syntactic dependency graphs:
	i) transform CoNLL 08 format into CoNLL 07 format

gam@cogito:~/mit/conll2008/tools$ ./conll_to_conll07.pl ../conll08st/devel/devel.closed > ../conll08st/devel/devel.conll07f.closed
1334 CoNLL records read
gam@cogito:~/mit/conll2008/tools$ ./conll_to_conll07.pl ../conll08st/train/train.closed > ../conll08st/train/train.conll07f.closed
39279 CoNLL records read

gam@cogito:~/mit/conll2008/tools$ ./conll07_to_conll.pl ../conll08st/devel/devel.closed ../conll08st/devel/devel.conll07f.closed |diff - ../conll08st/devel/devel.closed
1334 CoNLL records read
gam@cogito:~/mit/conll2008/tools$ ./conll07_to_conll.pl ../conll08st/train/train.closed ../conll08st/train/train.conll07f.closed |diff - ../conll08st/train/train.closed
39279 CoNLL records read

	ii) apply Nivre's projectivisation on CoNLL 07 formatted data
	java -jar malt.jar 
		-c pproj // configuration option
		-m proj // projectivise -- -m deproj to deprojectivise
	        -i examples/data/talbanken05_test.conll // input data 
	        -o projectivized.conll // output data
	        -pp head // marking strategy none|baseline|head|path|head+path
		-pcr none|right|left|head // attachment strategy for covered roots
		-plo shortest|deepest // lifting order

gam@cogito:~/mit/conll2008/tools/nivre/malt-1.0.4$ java -jar malt.jar -c pprojH -m info

gam@cogito:~/mit/conll2008/tools/nivre/malt-1.0.4$ java -jar malt.jar -c pprojH -m proj -i ../../../conll08st/devel/devel.conll07f.closed -o ../../../conll08st/devel/devel.conll07f.closed.pprojH -pp head -pcr none -plo deepest
gam@cogito:~/mit/conll2008/tools/nivre/malt-1.0.4$ java -jar malt.jar -c pprojH -m proj -i ../../../conll08st/train/train.conll07f.closed -o ../../../conll08st/train/train.conll07f.closed.pprojH -pp head -pcr none -plo deepest

gam@cogito:~/mit/conll2008/tools/nivre/malt-1.0.4$ java -jar malt.jar -c pprojHP -m proj -i ../../../conll08st/train/train.conll07f.closed -o ../../../conll08st/train/train.conll07f.closed.pprojHP -pp head+path -pcr none -plo deepest
gam@cogito:~/mit/conll2008/tools/nivre/malt-1.0.4$ java -jar malt.jar -c pprojHP -m proj -i ../../../conll08st/devel/devel.conll07f.closed -o ../../../conll08st/devel/devel.conll07f.closed.pprojHP -pp head+path -pcr none -plo deepest

gam@cogito:~/mit/conll2008/tools/nivre/malt-1.0.4$ java -jar malt.jar -c pprojP -m proj -i ../../../conll08st/train/train.conll07f.closed -o ../../../conll08st/train/train.conll07f.closed.pprojP -pp path -pcr none -plo deepest
gam@cogito:~/mit/conll2008/tools/nivre/malt-1.0.4$ java -jar malt.jar -c pprojP -m proj -i ../../../conll08st/devel/devel.conll07f.closed -o ../../../conll08st/devel/devel.conll07f.closed.pprojP -pp path -pcr none -plo deepest

	iii) transform CoNLL 07 format int CoNLL 08 format


gam@cogito:~/mit/conll2008/conll08st/devel$ ./conll07_to_conllSUrm.pl ../conll08st/train/train.closed ../conll08st/train/train.conll07f.closed.pprojHP > ../conll08st/train/train.closed.pprojHP.SUrm
gam@cogito:~/mit/conll2008/conll08st/devel$ ./conll07_to_conllSUrm.pl ../conll08st/devel/devel.closed ../conll08st/devel/devel.conll07f.closed.pprojP > ../conll08st/devel/devel.closed.pprojP.SUrm
gam@cogito:~/mit/conll2008/conll08st/devel$ ./conll07_to_conllSUrm.pl ../conll08st/train/train.closed ../conll08st/train/train.conll07f.closed.pprojH > ../conll08st/train/train.closed.pprojH.SUrm


Mon Apr 14 11:03:13 EDT 2008

. to generate samples in ivan's format:

gam@cogito:~/mit/conll2008/tools$ ./dumprolesets.pl ../data/conll08st/train/train.closed train.closed.rolesets
gam@cogito:~/mit/conll2008/tools$ ./conll.pl sample.train.noncross.debugCoNLL train.closed.rolesets > sample.train.noncross.debugCoNLL.ivanf
3001 CoNLL records read


gam@cogito:~/mit/conll2008/tools$ cat ../data/conll08st/train/train.closed |./debugCoNLL.pl > sample.train.noncross.debugCoNLL
5760 CoNLL records read, 3001 CoNLL projective records sampled

gam@cogito:~/mit/conll2008/tools$ ./dumprolesets.pl sample.train.noncross.debugCoNLL sample.train.noncross.debugCoNLL.rolesets

gam@cogito:~/mit/conll2008/tools$ ./conll.pl sample.train.noncross.debugCoNLL sample.train.noncross.debugCoNLL.rolesets > sample.train.noncross.debugCoNLL.ivanf
3001 CoNLL records read

Tue Mar 25 10:17:00 EDT 2008

. to get and set @INC:
	. perl -e 'print join("\n", @INC), "\n";'
	. echo $PERL5LIB
	. cat /home/gam/.bashrc
	. use 'use lib "my/module/directory";'

. consider OO
      When the system is large or likely to become so
      When the data is aggregated in obvious structures that will become objects
      When the types of data form a natural hierarchy that can make use of inheritance
      When operations on data vary according to data type (making polymorphic invocation of methods feasible)
      When it is likely that new data types may be later introduced into the system, and will need to be handled by existing code
      When interactions between data are best represented by overloaded operators
      When the implementation of system components is likely to change over time (and hence should be encapsulated)
      When the system design is itself object-oriented
      When large amounts of client code will use the software (and should be insulated from changes in its implementation)
      When many separate operations will need to be applied to the same set of data

. a non-OO module template stored in a file called Some/Module.pm:

    package Some::Module;  # assumes Some/Module.pm

    use strict;
    use warnings;

    BEGIN {
        use Exporter   ();
        our ($VERSION, @ISA, @EXPORT, @EXPORT_OK, %EXPORT_TAGS);

        # set the version for version checking
        $VERSION     = 1.00;
        # if using RCS/CVS, this may be preferred
        $VERSION = sprintf "%d.%03d", q$Revision: 1.1 $ =~ /(\d+)/g;

        @ISA         = qw(Exporter);
        @EXPORT      = qw(&func1 &func2 &func4); # exported by default
        %EXPORT_TAGS = ( );     # eg: TAG => [ qw!name1 name2! ],

        # your exported package globals go here,
        # as well as any optionally exported functions
        @EXPORT_OK   = qw($Var1 %Hashit &func3); # exported on demand
	# @EXPORT_FAIL = qw( ); to prevent symbol exportation
    }
    our @EXPORT_OK; # necassary declaration ???

    # exported package globals go here
    our $Var1;
    our %Hashit;

    # non-exported package globals go here
    our @more;
    our $stuff;

    # initialize package globals, first exported ones
    $Var1   = '';
    %Hashit = ();

    # then the others (which are still accessible as $Some::Module::stuff)
    $stuff  = '';
    @more   = ();

    # all file-scoped lexicals must be created before
    # the functions below that use them.

    # file-private lexicals go here
    my $priv_var    = '';
    my %secret_hash = ();

    # here's a file-private function as a closure,
    # callable as &$priv_func;  it cannot be prototyped.
    my $priv_func = sub {
        # stuff goes here.
    };

    # make all your functions, whether exported or not;
    # remember to put something interesting in the {} stubs
    sub func1      {}    # no prototype
    sub func2()    {}    # proto'd void
    sub func3($$)  {}    # proto'd to 2 scalars

    # this one isn't exported, but could be called!
    sub func4(\%)  {}    # proto'd to 1 hash ref

    END { }       # module clean-up code here (global destructor)

    ## YOUR CODE GOES HERE

    1;  # don't forget to return a true value from the file

. Perl modules are included into a calling program by saying

    use Module; # to use it without any qualifications

or

    use Module LIST; # eg. use Some::Module qw(&func3); to import from @EXPORT_OK


Wed Mar 19 09:23:56 EDT 2008

. one-line Perl:
 . Perl re:
	. \n (newline, record separator, \r carriage return, \NNN octal eg. \011 = \t or \040 = \s, \xNN hexa eg. \x20 = space, \cX control char, \047 = single quote ', \w alphanum chars,  \W complement of \w, \s whitespace char, \S non-whitespace char, \d digit, \D non digital char, X|Y|Z alternation, \(X\) capturing parentheses, (X) grouping parentheses, $1 $2 $3 numbered variables ie. backrefs, * + ? re{min, max} re{n} re{min,} re{,max} greedy quantified regexs, (qre)? nono-greedy quantified regex,)

 . Perl capabilities:
	. word boundary, char class, control char, quantified re, capturing parentheses, quoting, case insentivity, arbitrary record specification, binary file, line-spanning matches, access to matched substrings, ...

. matching operator:
	. /RE/, m:RE:, m-RE- eg. /^\usr\/bin\// or m:^/usr/bin/: to match /usr/bin/
	. ^ beginning anchor, $ end anchor, \b word boundary, [...] chars class, [^...] chars class complement, [char1-char2] range of chars, $& most recent match, \Q..\E quoting metachars

. perl -wnl -e '/Linux/ and print;' /etc/motd
. perl -wnl -e '/Linux/ or print;' /etc/motd
. perl -wnl -e '/^\s*$/ or print;' a_file
. perl -wnl -e '/Linux/ and print;' /etc/*
. perl -wnl -e '/^\Q** $9.99 **\E/ and print;' sales
. perl -wnl -e '\b\d\d\d\d\d\b and print $&;' zipcodes # match and print exactly 5 digits
. cascading filter:
	. perl -wnl -e '/re/ and /re1/ and /re2/ and print;' a_file
. to display filenames:
	. perl -wnl -e '/RE/ and print $ARGV and close ARGV;' file file1 file2 ..
. matching modifiers: /RE/i, /RE/g, /RE/m (multiline mode), /RE/s (single line mode)
. paragraph mode where one or more blank lines delimits a paragraph (ie. $/ = "\n\n" or $/ = "", by default $/ is set to "\n"):
	. perl -00 -wnl -e '/RE/ and print;' a_file	
	. perl -00 -wnl -e '/RE/ and print and close;' a_file # to print the first match only	
. filemode (ie. $/ = undef):
	. perl -0777 -wnl -e ...

Tue Mar 18 15:19:55 EDT 2008
. awk scripts:

gam@cogito:~/mit/conll2008/tools/nivre/data/danish/ddt/train$ gawk 'BEGIN {FS="\t"; OFS="\t";} {print $1, "_", $2;} NR > 33 {exit;}' projectivized.conll # FS::field sep, OFS::output field sep, NR::number of processes records, 

gam@cogito:~/mit/conll2008/tools/nivre/data/danish/ddt/train$ gawk 'END {print NR;}' projectivized.conll # number of read records == wc -l, assuming RS=="\n"
77703
gam@cogito:~/mit/conll2008/tools/nivre/data/danish/ddt/train$ wc -l projectivized.conll
77703 projectivized.conll

. awk script to compute the number of sentences (delimited  by "\n\n+")
gawk 'BEGIN {RS="\n\n+"} END {print FILENAME, NR}'

. awk script generating word counts:
{
	$0 = tolower($0)
	gsub(/^[[:alnum:]_[:blank:]]/, "", $0)
	for (i=1; i<=NF;++i)
		freq[$i]++
}
END {
	for (word in freq)
		sort="sort -nr -k 2" # to sort the second field numerically in descending (reverse) order
		printf "%s\t%d\n", word, freq[word] |sort
	close(sort)
}

. awk script to compute bigram freq:
#!/usr/bin/gawk -f
BEGIN{ ws="***" }
{ for(i=1;i < NF;i++) freq[$i, ws, $(i+1)]++}
END{ 
for(w in freq)
	{
	split(w,wa,ws); # or here
	print w, wa[1], wa[2], freq[w];
	} 
}

.awk script to approximate limits as x approaches 0:
gawk '{ x=1.0/NR; print x,sin(x)/x }'
gawk '{ x=1.0/(2^NR); print 2^NR, x}'

.awk script to compute average:
gawk '{s += $1} END {print s, s/NR}' # or FNR that gets reset to 0 for each new file 

.awk script to compute F-measure (= 2xPxR/P+R):
gawk '{printf("%3.2f", (2*$1*$2)/($1+$2))}'

.awk script to compute maximum and minimum:
gawk 'NR==1 {max=$1; min=$1}\
      $1>=max {max=$1}\
      $1<=min {min=$1}\
      END {print max, min}'

.awk script to generate 7 random numbers in [0, 1]
yes |head -7 |gawk '{print rand()}'
# printf("%s %-8s %.2f %6.2f", a, b, c, d)
# %s string, %7s 7 chars string right justified, %-8s 8 char string left justified, $.2f 2 decimal places, $6.2f 6 chars and 2 decimal places
#eg. gam@cogito:~/mit/conll2008$ gawk 'BEGIN {printf("%7s\n", "abc")}'
#        abc